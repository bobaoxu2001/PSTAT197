# clear environment
rm(list = ls())
library(tidyverse)
# retrieve pollution data
url <- 'https://raw.githubusercontent.com/pstat197/pstat197a/main/materials/labs/lab1-setup/data/pollution.csv'
pollution <- read_csv(url)
# write as csv to file
write_csv(pollution, file = 'data/pollution.csv')
pollution <- read_csv(url)
library(tidyverse)
url <- 'https://raw.githubusercontent.com/pstat197/pstat197a/main/materials/labs/lab1-setup/data/pollution.csv'
pollution <- read_csv(url)
write_csv(pollution, file = 'data/pollution.csv')
rm(list = ls())
# a number
4.5
# a factor
factor(1, levels = c(1, 2), labels = c('blue', 'red'))
# a factor
factor(1, levels = c(1, 2), labels = c('blue', 'red'))
# less verbose definition
factor('blue', levels = c('blue', 'red'))
# check structure
str(factor('blue', levels = c('blue', 'red')))
# an array
my_ary <- array(data = c(1, 2, 3, 4, 5, 6, 7, 8),
dim = c(2, 4))
my_ary
# assign a name
my_lst <- list(animal = 'cat',
numbers = c(1, 4, 7),
short = TRUE)
# check structure
str(my_lst)
library(tidyverse)
library(tidyverse)
library(tidyverse)
url <- 'https://raw.githubusercontent.com/pstat197/pstat197a/main/materials/labs/lab2-tidyverse/data/'
library(tidyverse)
url <- 'https://raw.githubusercontent.com/pstat197/pstat197a/main/materials/labs/lab2-tidyverse/data/'
background <- paste(url, 'background-clean.csv', sep = '') %>%
read_csv()
interest <- paste(url, 'interest-clean.csv', sep = '') %>%
read_csv()
metadata <- paste(url, 'survey-metadata.csv', sep = '') %>%
read_csv()
library(tidyverse)
url <- 'https://raw.githubusercontent.com/pstat197/pstat197a/main/materials/labs/lab2-tidyverse/data/'
background <- paste(url,'background-clean.csv',sep = '') %>%
read_csv()
interest <- paste(url,'interest-clean.csv',sep = '') %>%
read_csv()
metadata <- paste(url,'survey-metadata.csv',sep = '') %>%
read_csv()
# print the data frame for inspection in the console
background
my_df %>% STEP1() %>% STEP2() %>% STEP3()
# the pipe operator
# a familiar example
my_vec <- c(1, 2, 5)
str(my_vec)
# the pipe operator
# a familiar example
my_vec <- c(1, 2, 5)
str(my_vec)
# use the pipe operator instead
my_vec %>% str()
# filter rows
background %>%
filter(math.comf > 3)
# pull a column
background %>%
pull(rsrch)
# define a new variable
background %>%
mutate(avg.comf = (math.comf + prog.comf + stat.comf)/3)
# sequence of verbs
background %>%
filter(stat.prof == 'Adv') %>%
mutate(avg.comf = (math.comf + prog.comf + stat.comf)/3) %>%
select(avg.comf, rsrch)
# a summary
background %>%
filter(stat.prof == 'Adv') %>%
mutate(avg.comf = (math.comf + prog.comf + stat.comf)/3) %>%
select(avg.comf, rsrch) %>%
summarize(prop.rsrch = mean(rsrch))
# count observations
background %>%
group_by(stat.prof) %>%
count()
# a grouped summary
background %>%
group_by(stat.prof) %>%
select(contains('.comf')) %>%
summarize_all(.funs = mean)
# many variables, many summaries
comf_sum <- background %>%
select(contains('comf')) %>%
summarise_all(.funs = list(mean = mean,
median = median,
min = min,
max = max))
comf_sum
# separate into rows and columns
comf_sum %>%
gather(stat, val) %>%
separate(stat, into = c('variable', 'stat'), sep = '_')
# spread into table
comf_sum %>%
gather(stat, val) %>%
separate(stat, into = c('variable', 'stat'), sep = '_') %>%
spread(stat, val)
# summary of classes taken
classes <- background %>%
select(11:29) %>%
mutate_all(~factor(.x, levels = c('no', 'yes'))) %>%
mutate_all(~as.numeric(.x) - 1) %>%
summarize_all(mean) %>%
gather(class, proportion)
classes
classes %>% arrange(desc(proportion))
# plot it
classes %>%
ggplot(aes(x = proportion, y = class)) +
geom_point()
fig <- classes %>%
ggplot(aes(x = proportion, y = reorder(class, proportion))) +
geom_point()
fig
# adjust labels
fig + labs(x = 'proportion of class', y = '')
library(ggplot2)
library(dplyr)
library(ggplot2)
library(dplyr)
summary(midwest$percollege)
college_edu <- midwest$percollege
x_bar <- mean(college_edu)
n <- nrow(midwest) #sample_size
s <- sd(college_edu)
library(ggplot2)
library(dplyr)
summary(midwest$percollege)
college_edu <- midwest$percollege
x_bar <- mean(college_edu)
n <- nrow(midwest) #sample_size
s <- sd(college_edu)
college_edu <- midwest$percollege
x_bar <- mean(college_edu)
n <- nrow(midwest) #sample_size
s <- sd(college_edu)
college_edu
x_bar
n
s
college_edu <- midwest$percollege
x_bar <- mean(college_edu)
n <- nrow(midwest) #sample_size
s <- sd(college_edu)
n
s
college_edu <- midwest$percollege
x_bar <- mean(college_edu)
n <- nrow(midwest) #sample_size
s <- sd(college_edu)
n
s
t <- (x_bar - 0.32)/(s/sqrt(n))
t
college_edu <- midwest$percollege
x_bar <- mean(college_edu)
n <- nrow(midwest) #sample_size
s <- sd(college_edu)
n
s
t <- (x_bar - 0.32)/(s/sqrt(n))
t
critical_value <- qt(p=0.05,df=(n-1))
college_edu <- midwest$percollege
x_bar <- mean(college_edu)
n <- nrow(midwest) #sample_size
s <- sd(college_edu)
n
s
t <- (x_bar - 0.32)/(s/sqrt(n))
t
critical_value <- qt(p=0.05,df=(n-1))
critical_value
t.test(college_edu,mu=32,alternative='less')
college_edu <- midwest$percollege
x_bar <- mean(college_edu)
n <- nrow(midwest) #sample_size
s <- sd(college_edu)
n
s
t <- (x_bar - 32)/(s/sqrt(n))
t
critical_value <- qt(p=0.05,df=(n-1))
critical_value
t.test(college_edu,mu=32,alternative='less')
df2 <- midwest %>%
filter(state=="OH" | state=="MI")
df2 %>%
group_by(state) %>%
summarize(mean(percollege))
df2 <- midwest %>%
filter(state=="OH" | state=="MI")
df2 %>%
group_by(state) %>%
summarize(mean(percollege))
n <- nrow(OH)
data(sleep)
sleep
ggplot(sleep, aes(group, extra)) + geom_boxplot()
t.test(extra ~ group, data = sleep, paired = TRUE)
data(sleep)
sleep
ggplot(sleep, aes(group, extra)) + geom_boxplot()
t.test(extra ~ group, data = sleep, paired = TRUE)
data(sleep)
sleep
df2 <- midwest %>%
filter(state=="OH" | state=="MI")
df2 %>%
group_by(state) %>%
summarize(mean(percollege))
summary(df %>% filter(state == "OH") %>% .$percollege)
summary(df2 %>% filter(state == "OH") %>% .$percollege)
data(sleep)
sleep
ggplot(sleep, aes(group, extra)) + geom_boxplot()
t.test(extra ~ group, data = sleep, paired = TRUE)
